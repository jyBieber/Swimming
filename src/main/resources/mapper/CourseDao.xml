<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.swim.dao.CourseDao">
    <resultMap id="courseMap" type="com.it.swim.entity.Course">
        <id column="course_id" property="courseId"/>
        <result column="create_time" property="createTime"/>

        <association property="coach" column="coach_id" javaType="com.it.swim.entity.Coach">
            <id column="coach_id" property="coachId"/>
            <result column="coach_name" property="coachName"/>
        </association>
    </resultMap>

    <select id="queryCourse" resultMap="courseMap">
        SELECT
        co.course_id, co.coach_id, c.coach_name, co.create_time
        FROM
        course co, coach c
        WHERE
        co.coach_id = c.coach_id
        <if test="future != null">
            and co.create_time > now() and DATE_ADD(now(),INTERVAL 7 DAY) >= co.create_time
        </if>
        ORDER BY co.course_id
    </select>

    <select id="queryCourseById" resultMap="courseMap" parameterType="Long">
        SELECT co.course_id,
               co.coach_id,
               c.coach_name,
               co.create_time
        FROM course co,
             coach c
        WHERE co.course_id = #{courseId}
          AND co.coach_id = c.coach_id
        ORDER BY co.course_id
    </select>

    <select id="queryCourseByCoachId" resultMap="courseMap">
        SELECT co.course_id,
               co.coach_id,
               c.coach_name,
               co.create_time
        FROM course co,
             coach c
        WHERE co.coach_id = #{coach.coachId}
          AND co.coach_id = c.coach_id
        ORDER BY co.course_id
    </select>

    <insert id="addCourse" useGeneratedKeys="true" keyColumn="course_id" keyProperty="courseId">
        INSERT INTO course
            (course_id, coach_id, create_time)
        VALUES (#{courseId}, #{coach.coachId}, #{createTime})
    </insert>

    <update id="modifyCourse" parameterType="com.it.swim.entity.Course">
        UPDATE course
        <set>
            <if test="coach != null">coach_id=#{coach.coachId},</if>
            <if test="createTime != null">create_time=#{createTime},</if>
        </set>
        where course_id=#{courseId}
    </update>

    <delete id="deleteCourse">
        DELETE
        FROM course
        WHERE course_id = #{courseId}
    </delete>
</mapper>